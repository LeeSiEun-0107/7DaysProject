#삽입정렬
#필요할 때만 위치를 바꾸므로 데이터가 거의 정렬되어 있을 경우 선택 정렬보다 훨씬 효율적이다
#시간복잡도 O(N^2)
#정렬이 거의 되어있다면 효율적

array=[7,5,9,0,3,1,6,2,4,8]

#0번째 원소는 이미 정렬되어있다 생각하고 1번째 원소 부터 진행
for i in range(1,len(array)):
  #i부터 1까지 감소하여 반복하는 문법
  for j in range(i,0,-1):
    # i번째 원소는 자신 기준 이전 원소와 비교를 하고 할 때 자기 이전 원소와 비교해서 작으면 자리를 바꾸는 방식으로 적절한 위치를 찾아서 간다. 만약에 이전 원소가 같거나 큰 경우는 break하여 더 이전으로 위치를 바꾸지 못하게 한다. 
    if array[j]<array[j-1]:
      array[j], array[j-1] = array[j-1], array[j]
    else:
      break
print(array)
